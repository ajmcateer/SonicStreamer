<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///Styles/TextBlockStyles.xaml" />
        <ResourceDictionary Source="ms-appx:///Styles/ButtonStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Orange" />
        <Setter Property="TabNavigation" Value="Local" />
        <Setter Property="IsHoldingEnabled" Value="True" />
        <Setter Property="Padding" Value="12,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
        <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid
                        x:Name="ContentBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Rectangle
                            x:Name="BorderBackground"
                            Control.IsTemplateFocusTarget="True"
                            Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <Grid
                            x:Name="ContentPresenterGrid"
                            Margin="0,0,0,0"
                            Background="Transparent">
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                            </Grid.RenderTransform>
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}" />
                        </Grid>
                        <!--
                            The 'Xg' text simulates the amount of space one line of text will occupy.
                            In the DataPlaceholder state, the Content is not loaded yet so we
                            approximate the size of the item using placeholder text.
                        -->
                        <TextBlock
                            x:Name="PlaceholderTextBlock"
                            Margin="{TemplateBinding Padding}"
                            AutomationProperties.AccessibilityView="Raw"
                            Foreground="{x:Null}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Text="Xg" />
                        <Rectangle
                            x:Name="PlaceholderRect"
                            Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
                            Visibility="Collapsed" />
                        <Rectangle
                            x:Name="MultiArrangeOverlayBackground"
                            Grid.ColumnSpan="2"
                            Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
                            IsHitTestVisible="False"
                            Opacity="0" />
                        <Border
                            x:Name="MultiSelectSquare"
                            Width="20"
                            Height="20"
                            Margin="0,10,10,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Background="Black"
                            BorderBrush="{TemplateBinding Foreground}"
                            BorderThickness="2"
                            Visibility="Collapsed">
                            <Border.Clip>
                                <RectangleGeometry Rect="0,0,20,20">
                                    <RectangleGeometry.Transform>
                                        <TranslateTransform x:Name="MultiSelectClipTransform" />
                                    </RectangleGeometry.Transform>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Border.RenderTransform>
                                <TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
                            </Border.RenderTransform>
                            <FontIcon
                                x:Name="MultiSelectCheck"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="16"
                                Foreground="{TemplateBinding Foreground}"
                                Glyph="&#xE73E;"
                                Opacity="0"
                                Visibility="Collapsed" />
                        </Border>
                        <TextBlock
                            x:Name="MultiArrangeOverlayText"
                            Grid.ColumnSpan="2"
                            Margin="18,9,0,0"
                            AutomationProperties.AccessibilityView="Raw"
                            FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                            FontSize="26.667"
                            Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                            IsHitTestVisible="False"
                            Opacity="0"
                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
                            TextTrimming="WordEllipsis"
                            TextWrapping="Wrap" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Orange" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MultiSelectCheck"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectedColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MultiSelectCheck"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectedPointerOverColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="MultiSelectCheck"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="BorderBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SelectedPressedColor}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MultiSelectStates">
                                <VisualState x:Name="MultiSelectDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultiSelectEnabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable" />
                                <VisualState x:Name="DataPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderHintStates">
                                <VisualState x:Name="NoReorderHint" />
                                <VisualState x:Name="BottomReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation
                                            Direction="Bottom"
                                            ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                            TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation
                                            Direction="Top"
                                            ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                            TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation
                                            Direction="Right"
                                            ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                            TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation
                                            Direction="Left"
                                            ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                            TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DragStates">
                                <VisualState x:Name="NotDragging" />
                                <VisualState x:Name="Dragging">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="{ThemeResource ListViewItemDragThemeOpacity}"
                                            Duration="0" />
                                        <DragItemThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DraggingTarget">
                                    <Storyboard>
                                        <DropTargetItemThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingPrimary">
                                    <Storyboard>
                                        <!--
                                            These two Opacity animations are required - the FadeInThemeAnimations
                                            on the same elements animate an internal Opacity.
                                        -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="MultiArrangeOverlayBackground"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="MultiArrangeOverlayText"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0" />
                                        <DoubleAnimation
                                            Storyboard.TargetName="ContentBorder"
                                            Storyboard.TargetProperty="Opacity"
                                            To="{ThemeResource ListViewItemDragThemeOpacity}"
                                            Duration="0" />
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                                        <DragItemThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingSecondary">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DraggedPlaceholder">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ListViewPodcastEpisodeItemStyle"
        BasedOn="{StaticResource ListViewItemStyle}"
        TargetType="ListViewItem">
        <Setter Property="Padding" Value="12" />
    </Style>

    <DataTemplate x:Key="TrackListItemTemplate">
        <UserControl>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition x:Name="BitRateColumn" Width="80" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding TrackNr}" TextAlignment="Right" />
                <TextBlock
                    Grid.Column="1"
                    Margin="10,0,0,0"
                    Text="{Binding Name}"
                    TextTrimming="CharacterEllipsis" />
                <TextBlock
                    Grid.Column="2"
                    Margin="5,0"
                    VerticalAlignment="Center"
                    FontFamily="Segoe UI Symbol"
                    Text="{Binding StatusOutput}" />
                <TextBlock
                    Grid.Column="3"
                    Text="{Binding BitRate}"
                    TextAlignment="Right" />
                <TextBlock
                    Grid.Column="4"
                    Text="{Binding DurationOutput}"
                    TextAlignment="Right" />
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="0" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="BitRateColumn.Width" Value="0" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState>
                            <VisualState.StateTriggers>
                                <AdaptiveTrigger MinWindowWidth="500" />
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="BitRateColumn.Width" Value="80" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </UserControl>
    </DataTemplate>

    <DataTemplate x:Key="PodcastEpisodeAvailableItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Width="100" Height="100">
                <Image Source="ms-appx:///Assets/cover.png" />
                <Image Canvas.ZIndex="1" Source="{Binding Episode.Cover.Uri}" />
                <Button
                    Margin="0,0,5,5"
                    Canvas.ZIndex="1"
                    Style="{StaticResource OrangePlayButtonStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="PlayEpisodeClick" TargetObject="{Binding}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>
            <StackPanel
                Grid.Row="0"
                Grid.Column="1"
                Margin="10,0,0,0">
                <TextBlock
                    Margin="0,0,0,10"
                    Style="{StaticResource OrangeSubtitleTextBlockStyle}"
                    Text="{Binding Episode.Name}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}" Text="{Binding Episode.Album}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}" Text="{Binding Episode.DurationOutput}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}">
                    <Run Text="Released: " />
                    <Run Text="{Binding Episode.Released}" />
                </TextBlock>
            </StackPanel>
            <Grid
                Grid.Row="0"
                Grid.Column="2"
                Margin="5">
                <TextBlock FontFamily="Segoe UI Symbol" Text="{Binding Episode.StatusOutput}" />
                <Button Style="{StaticResource ItemOptionButtonStyle}">
                    <Button.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <MenuFlyoutItem Text="Play">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Click">
                                        <core:CallMethodAction MethodName="PlayEpisodeClick" TargetObject="{Binding}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem Text="Add to Playback">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Click">
                                        <core:CallMethodAction MethodName="AddEpisodeClick" TargetObject="{Binding}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem Text="Download">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Click">
                                        <core:CallMethodAction MethodName="DownloadEpisodeClick" TargetObject="{Binding}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </Grid>
            <Button
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Content="{Binding ExpandButtonSymbol}"
                Style="{StaticResource ExpandButtonStyle}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction MethodName="ExpandCollapseButtonClick" TargetObject="{Binding Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Button>
            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="0,10,0,0"
                Style="{StaticResource OrangeBaseTextBlockStyle}"
                Text="{Binding Episode.Description}"
                Visibility="{Binding IsDescriptionVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PodcastEpisodeDownloadingItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Width="100" Height="100">
                <Image Source="ms-appx:///Assets/cover.png" />
                <Image Canvas.ZIndex="1" Source="{Binding Episode.Cover.Uri}" />
                <Button
                    Margin="0,0,5,5"
                    Canvas.ZIndex="1"
                    Style="{StaticResource OrangeActiveSyncButtonStyle}" />
            </Grid>
            <StackPanel
                Grid.Row="0"
                Grid.Column="1"
                Margin="10,0,0,0">
                <TextBlock
                    Margin="0,0,0,10"
                    Style="{StaticResource OrangeSubtitleTextBlockStyle}"
                    Text="{Binding Episode.Name}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}" Text="{Binding Episode.Album}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}" Text="{Binding Episode.DurationOutput}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}">
                    <Run Text="Released: " />
                    <Run Text="{Binding Episode.Released}" />
                </TextBlock>
            </StackPanel>
            <Button
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Content="{Binding ExpandButtonSymbol}"
                Style="{StaticResource ExpandButtonStyle}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction MethodName="ExpandCollapseButtonClick" TargetObject="{Binding Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Button>
            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="0,10,0,0"
                Style="{StaticResource OrangeBaseTextBlockStyle}"
                Text="{Binding Episode.Description}"
                Visibility="{Binding IsDescriptionVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PodcastEpisodeSkippedItemTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Width="100" Height="100">
                <Image Source="ms-appx:///Assets/cover.png" />
                <Image Canvas.ZIndex="1" Source="{Binding Episode.Cover.Uri}" />
                <Button
                    Margin="0,0,5,5"
                    Canvas.ZIndex="1"
                    Style="{StaticResource OrangeDownloadButtonStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="DownloadEpisodeToServerClick" TargetObject="{Binding}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </Button>
            </Grid>
            <StackPanel
                Grid.Row="0"
                Grid.Column="1"
                Margin="10,0,0,0">
                <TextBlock
                    Margin="0,0,0,10"
                    Style="{StaticResource OrangeSubtitleTextBlockStyle}"
                    Text="{Binding Episode.Name}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}" Text="{Binding Episode.Album}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}" Text="{Binding Episode.DurationOutput}" />
                <TextBlock Style="{StaticResource OrangeBaseTextBlockStyle}">
                    <Run Text="Released: " />
                    <Run Text="{Binding Episode.Released}" />
                </TextBlock>
            </StackPanel>
            <Button
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Content="{Binding ExpandButtonSymbol}"
                Style="{StaticResource ExpandButtonStyle}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction MethodName="ExpandCollapseButtonClick" TargetObject="{Binding Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Button>
            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Margin="0,10,0,0"
                Style="{StaticResource OrangeBaseTextBlockStyle}"
                Text="{Binding Episode.Description}"
                Visibility="{Binding IsDescriptionVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>
    </DataTemplate>
</ResourceDictionary>