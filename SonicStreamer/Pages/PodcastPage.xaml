<Page
    x:Class="SonicStreamer.Pages.PodcastPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{StaticResource PodcastVM}"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///Styles/CommandBarStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/TextBlockStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/ListViewStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/PivotStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/ComboBoxStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/ButtonStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/SplitViewStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/PivotStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar
            OverflowButtonVisibility="Visible"
            Style="{StaticResource OrangeCommandBarStyle}"
            Visibility="{Binding IsBottomAppBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <CommandBar.Resources>
                <Style BasedOn="{StaticResource OrangeAppBarButtonStyle}" TargetType="AppBarButton" />
            </CommandBar.Resources>
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Play" Label="Play all episodes">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="PlayPodcastClick" TargetObject="{Binding Mode=OneWay}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton Icon="Add" Label="Add all to playback">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="AddPodcastClick" TargetObject="{Binding Mode=OneWay}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
            </CommandBar.PrimaryCommands>
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="Download all to server">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="DownloadSkippedEpisodesClick" TargetObject="{Binding Mode=OneWay}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton Label="Download all to device">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="DownloadAvailableEpisodesClick" TargetObject="{Binding Mode=OneWay}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
                <AppBarButton Label="Refresh / Check for new episodes">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="SearchforEpisodesClick" TargetObject="{Binding Mode=OneWay}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid>
            <StackPanel Orientation="Horizontal">
                <RadioButton
                    x:Name="HamburgerButton"
                    DataContext="{StaticResource MainVM}"
                    Style="{StaticResource SplitViewHamburgerButtonStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="HamburgerButtonClick" TargetObject="{Binding Mode=OneWay}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
                <TextBlock Style="{StaticResource OrangePageHeaderTextBlockStyle}" Text="podcast" />
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Pivot>
                <PivotItem Header="New Episodes">
                    <ListView
                        MaxWidth="800"
                        ItemContainerStyle="{StaticResource ListViewPodcastEpisodeItemStyle}"
                        ItemTemplate="{StaticResource PodcastEpisodeAvailableItemTemplate}"
                        ItemsSource="{Binding NewEpisodes}"
                        SelectionMode="None" />
                </PivotItem>
                <PivotItem Header="Podcasts">
                    <Grid MaxWidth="800">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel>
                            <ComboBox
                                HorizontalAlignment="Stretch"
                                ItemsSource="{Binding Podcasts}"
                                PlaceholderText="Select a podcast"
                                SelectedItem="{Binding SelectedPodcast, Mode=TwoWay}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid Width="50" Height="50">
                                                <Image Source="ms-appx:///Assets/cover.png" />
                                                <Image Canvas.ZIndex="1" Source="{Binding Cover.Uri}" />
                                            </Grid>
                                            <TextBlock
                                                Grid.Column="1"
                                                Margin="10"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource ItemTitleTextBlockStyle}"
                                                Text="{Binding Name}" />
                                        </Grid>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource OrangeComboBoxItemStyle}" TargetType="ComboBoxItem" />
                                </ComboBox.ItemContainerStyle>
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="SelectionChanged">
                                        <core:CallMethodAction MethodName="Podcast_SelectionChanged" TargetObject="{Binding Mode=OneWay}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </ComboBox>
                            <TextBlock
                                Margin="0,10"
                                MaxLines="4"
                                Style="{StaticResource OrangeBaseTextBlockStyle}"
                                Text="{Binding SelectedPodcast.Description}"
                                TextTrimming="CharacterEllipsis" />
                        </StackPanel>
                        <ScrollViewer Grid.Row="1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid Visibility="{Binding AreDownloadingEpisodesAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Margin="0,10"
                                        Style="{StaticResource OrangeSubtitleTextBlockStyle}"
                                        Text="Downloading episodes" />
                                    <ListView
                                        Grid.Row="1"
                                        ItemContainerStyle="{StaticResource ListViewPodcastEpisodeItemStyle}"
                                        ItemTemplate="{StaticResource PodcastEpisodeDownloadingItemTemplate}"
                                        ItemsSource="{Binding DownloadingEpisodes}"
                                        SelectionMode="None" />
                                </Grid>
                                <Grid Grid.Row="1" Visibility="{Binding AreSkippedEpisodesAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Margin="0,10"
                                        Style="{StaticResource OrangeSubtitleTextBlockStyle}"
                                        Text="Not yet downloaded episodes" />
                                    <ListView
                                        Grid.Row="1"
                                        ItemContainerStyle="{StaticResource ListViewPodcastEpisodeItemStyle}"
                                        ItemTemplate="{StaticResource PodcastEpisodeSkippedItemTemplate}"
                                        ItemsSource="{Binding SkippedEpisodes}"
                                        SelectionMode="None" />
                                </Grid>
                                <Grid Grid.Row="2" Visibility="{Binding AreAvailableEpisodesAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Margin="0,10"
                                        Style="{StaticResource OrangeSubtitleTextBlockStyle}"
                                        Text="Available episodes" />
                                    <ListView
                                        Grid.Row="1"
                                        ItemContainerStyle="{StaticResource ListViewPodcastEpisodeItemStyle}"
                                        ItemTemplate="{StaticResource PodcastEpisodeAvailableItemTemplate}"
                                        ItemsSource="{Binding AvailableEpisodes}"
                                        SelectionMode="None" />
                                </Grid>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </PivotItem>
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="SelectionChanged">
                        <core:CallMethodAction MethodName="Pivot_SelectionChanged" TargetObject="{Binding Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </Pivot>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HamburgerButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>