<Page
    x:Class="SonicStreamer.Pages.AlbumsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    DataContext="{Binding Source={StaticResource AlbumVM}}"
    NavigationCacheMode="Required"
    mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///Styles/CommandBarStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/TextBlockStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/TextBoxStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/ButtonStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/ListingItemStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/SplitViewStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/ComboBoxStyles.xaml" />
                <ResourceDictionary Source="ms-appx:///Styles/ProgressRingStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <CollectionViewSource
                x:Name="ListViewSource"
                IsSourceGrouped="True"
                Source="{Binding Items}" />
        </ResourceDictionary>
    </Page.Resources>

    <Page.BottomAppBar>
        <CommandBar
            OverflowButtonVisibility="Visible"
            Style="{StaticResource OrangeCommandBarStyle}"
            Visibility="{Binding IsBottomAppBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <CommandBar.Resources>
                <Style BasedOn="{StaticResource OrangeAppBarButtonStyle}" TargetType="AppBarButton" />
            </CommandBar.Resources>
            <AppBarButton Icon="Play" Label="Play Selection">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction MethodName="PlayClick" TargetObject="{Binding Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <AppBarButton Icon="Add" Label="Add to Playback">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction MethodName="AddClick" TargetObject="{Binding Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
            <AppBarButton Icon="Favorite" Label="Add to Playlist">
                <AppBarButton.Flyout>
                    <Flyout
                        x:Name="PlaylistFlyout"
                        Closed="PlaylistFlyout_Closed"
                        Opening="PlaylistFlyout_Opening">
                        <StackPanel MinWidth="250" DataContext="{StaticResource PlaylistVM}">
                            <ComboBox
                                Margin="0,0,0,5"
                                HorizontalAlignment="Stretch"
                                ItemsSource="{Binding AvailablePlaylists}"
                                PlaceholderText="Select a playlist"
                                SelectedItem="{Binding SelectedAddToPlaylist, Mode=TwoWay}"
                                Style="{StaticResource OrangeComboBoxStyle}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource OrangeComboBoxItemStyle}" TargetType="ComboBoxItem" />
                                </ComboBox.ItemContainerStyle>
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="SelectionChanged">
                                        <core:CallMethodAction MethodName="AddToPlaylistComboBox_SelectionChanged" TargetObject="{Binding Mode=OneWay}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </ComboBox>
                            <TextBox
                                Margin="0,0,0,5"
                                PlaceholderText="New Playlist Name"
                                Style="{StaticResource OrangeTextBoxStyle}"
                                Text="{Binding NewPlaylistName, Mode=TwoWay}"
                                Visibility="{Binding IsNewPlaylistTextBoxVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Button
                                HorizontalAlignment="Center"
                                Click="AddToPlayback_Click"
                                Content="Add to Playlist"
                                IsEnabled="{Binding IsAddToPlaylistButtonEnabled}"
                                Style="{StaticResource OrangeButtonStyle}">
                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Click">
                                        <core:CallMethodAction MethodName="AddToPlaylistClick" TargetObject="{StaticResource AlbumVM}" />
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </Button>
                        </StackPanel>
                    </Flyout>
                </AppBarButton.Flyout>
            </AppBarButton>
            <AppBarButton Icon="Download" Label="Download">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="Click">
                        <core:CallMethodAction MethodName="DownloadTracksClick" TargetObject="{Binding Mode=OneWay}" />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
            </AppBarButton>
        </CommandBar>
    </Page.BottomAppBar>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <RadioButton
                    x:Name="HamburgerButton"
                    DataContext="{StaticResource MainVM}"
                    Style="{StaticResource SplitViewHamburgerButtonStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction MethodName="HamburgerButtonClick" TargetObject="{Binding Mode=OneWay}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </RadioButton>
                <TextBlock Style="{StaticResource OrangePageHeaderTextBlockStyle}" Text="albums" />
            </StackPanel>
            <Grid Grid.Column="1" HorizontalAlignment="Right">
                <ToggleButton IsChecked="{Binding SelectionMode, Mode=TwoWay, Converter={StaticResource SelectionModeToBooleanConverter}}" Style="{StaticResource PlaybackToggleButtonStyle}">
                    <SymbolIcon Symbol="Bullets" />
                </ToggleButton>
            </Grid>
        </Grid>
        <SemanticZoom x:Name="SemanticZoomContainer" Grid.Row="1">
            <SemanticZoom.ZoomedOutView>
                <GridView
                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                    ItemContainerStyle="{StaticResource ZoomedOutGridViewItemStyle}"
                    ItemTemplate="{StaticResource ZoomedOutGridViewItemTemplate}"
                    ItemsPanel="{StaticResource ZoomedOutGridViewItemsPanelTemplate}"
                    ScrollViewer.IsHorizontalScrollChainingEnabled="False" />
            </SemanticZoom.ZoomedOutView>
            <SemanticZoom.ZoomedInView>
                <ListView
                    x:Name="ListingItemsView"
                    IsItemClickEnabled="{Binding IsItemClickEnabled}"
                    ItemClick="listingItemsView_ItemClick"
                    ItemsSource="{Binding Source={StaticResource ListViewSource}}"
                    SelectionMode="{Binding SelectionMode}">
                    <ListView.GroupStyle>
                        <GroupStyle HeaderTemplate="{StaticResource ListingGroupHeaderStyle}" />
                    </ListView.GroupStyle>
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="SelectionChanged">
                            <core:CallMethodAction MethodName="ListingItems_SelectionChanged" TargetObject="{Binding Mode=OneWay}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ListView>
            </SemanticZoom.ZoomedInView>
        </SemanticZoom>
        <Grid
            Grid.Row="1"
            Canvas.ZIndex="1"
            Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel MaxWidth="250" Margin="0,20,0,0">
                <TextBlock
                    Margin="0,0,0,10"
                    HorizontalAlignment="Center"
                    Style="{StaticResource OrangeSubtitleTextBlockStyle}"
                    Text="Loading..." />
                <ProgressBar
                    Maximum="{Binding LoadingCount}"
                    Style="{StaticResource OrangeProgressBarStyle}"
                    Value="{Binding LoadedItems}" />
            </StackPanel>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListingItemsView.Style" Value="{StaticResource SmallListingListViewStyle}" />
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ListingItemsView.Style" Value="{StaticResource LargeListingListViewStyle}" />
                        <Setter Target="HamburgerButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>